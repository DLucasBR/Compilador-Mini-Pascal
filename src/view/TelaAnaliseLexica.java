package view;

import compiler.front_end.Token;
import compiler.front_end.Scanner;
import java.io.BufferedReader;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.IOException;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFileChooser;

import static view.ViewAuxiliar.imprimeTextArea;
import static view.ViewAuxiliar.imprimeTextField;
import static view.ViewAuxiliar.instanciaFileChooser;
import static view.ViewAuxiliar.limpaTextField;
/**
 *
 * @author daluc
 */
public class TelaAnaliseLexica extends javax.swing.JFrame {
    /**
     * Creates new form TelaAnaliseLexica
     */
    
    private ArrayList<Character> arrayDeCaracteresCodigoFonte;
    
    public TelaAnaliseLexica() {
        this.arrayDeCaracteresCodigoFonte = new ArrayList<>();
        initComponents();
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        botaoSelecionarArquivo = new javax.swing.JButton();
        txtDiretorioCodigoFonte = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        textAreaCodigoFonte = new javax.swing.JTextArea();
        botaoAnalisar = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        textAreaTokens = new javax.swing.JTextArea();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setResizable(false);

        botaoSelecionarArquivo.setText("Codigo Fonte");
        botaoSelecionarArquivo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botaoSelecionarArquivoActionPerformed(evt);
            }
        });

        txtDiretorioCodigoFonte.setEditable(false);
        txtDiretorioCodigoFonte.setFocusable(false);

        textAreaCodigoFonte.setEditable(false);
        textAreaCodigoFonte.setColumns(20);
        textAreaCodigoFonte.setRows(5);
        jScrollPane1.setViewportView(textAreaCodigoFonte);

        botaoAnalisar.setText("Analise Lexica");
        botaoAnalisar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botaoAnalisarActionPerformed(evt);
            }
        });

        textAreaTokens.setEditable(false);
        textAreaTokens.setColumns(20);
        textAreaTokens.setRows(5);
        jScrollPane2.setViewportView(textAreaTokens);

        jLabel1.setText("Tokens");

        jLabel2.setText("Codigo Fonte");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(175, 175, 175)
                .addComponent(jLabel2)
                .addGap(118, 118, 118)
                .addComponent(botaoAnalisar, javax.swing.GroupLayout.PREFERRED_SIZE, 202, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(103, 103, 103)
                .addComponent(jLabel1)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(txtDiretorioCodigoFonte)
                .addGap(18, 18, 18)
                .addComponent(botaoSelecionarArquivo, javax.swing.GroupLayout.PREFERRED_SIZE, 155, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(2, 2, 2)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 450, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 450, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtDiretorioCodigoFonte, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(botaoSelecionarArquivo))
                .addGap(11, 11, 11)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(botaoAnalisar, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 350, Short.MAX_VALUE)
                    .addComponent(jScrollPane1)))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void botaoSelecionarArquivoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botaoSelecionarArquivoActionPerformed
        
        JFileChooser fileChooser = instanciaFileChooser();
        int respostaDoFileChooser = fileChooser.showOpenDialog(this);
        
        File arquivoCodigoFonte;
        
        if(respostaDoFileChooser == JFileChooser.APPROVE_OPTION){
            
            limpaTextField(textAreaCodigoFonte);
            arrayDeCaracteresCodigoFonte.clear();
            /*Caso nao seja a primeira vez que o usuario seleciona um arquivo nesta intancia*/
            
            arquivoCodigoFonte = fileChooser.getSelectedFile();
            imprimeTextField(txtDiretorioCodigoFonte, arquivoCodigoFonte.getPath());
            
            try {

                BufferedReader leitorDeCaracteres = new BufferedReader(new FileReader(arquivoCodigoFonte.getPath()));
                int aux;
		
                    while((aux = leitorDeCaracteres.read()) != -1){
				arrayDeCaracteresCodigoFonte.add((char)aux);
			}
                    
                arrayDeCaracteresCodigoFonte.add((char)'\000');
                leitorDeCaracteres.close();
                
            } catch (FileNotFoundException ex) {
                Logger.getLogger(TelaAnaliseLexica.class.getName()).log(Level.SEVERE, null, ex);
            } catch (IOException ex) {
                Logger.getLogger(TelaAnaliseLexica.class.getName()).log(Level.SEVERE, null, ex);
            }
            
            imprimeTextArea(textAreaCodigoFonte,arrayDeCaracteresCodigoFonte);
        }
    }//GEN-LAST:event_botaoSelecionarArquivoActionPerformed

    private void botaoAnalisarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botaoAnalisarActionPerformed
        
        if(!arrayDeCaracteresCodigoFonte.isEmpty()){ 
                                    
            Scanner scanner = new Scanner(arrayDeCaracteresCodigoFonte); 
            limpaTextField(textAreaTokens);
            Token aux;
                    
            do{ 
               
                aux = scanner.scan();
                imprimeTextArea(textAreaTokens, aux.spelling + "\t" + Token.getSpellings(aux.kind) + '\n');
           
            }while(aux.kind != Token.EOT); 

        }else{
           imprimeTextArea(textAreaTokens,"Selecione um arquivo de codigo fonte!");
        } 
    }//GEN-LAST:event_botaoAnalisarActionPerformed
    

    
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced leitorDeCaracteres Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(TelaAnaliseLexica.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(TelaAnaliseLexica.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(TelaAnaliseLexica.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(TelaAnaliseLexica.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new TelaAnaliseLexica().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton botaoAnalisar;
    private javax.swing.JButton botaoSelecionarArquivo;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextArea textAreaCodigoFonte;
    private javax.swing.JTextArea textAreaTokens;
    private javax.swing.JTextField txtDiretorioCodigoFonte;
    // End of variables declaration//GEN-END:variables
}
